#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# pylint: disable=no-name-in-module

"""

Prettyprint syntax-highlighted HTML from /dev/stdin

Compatible with Python 2/3

Usage: command | prettyprint
  or:  prettyprint < FILE

"""

from __future__ import print_function

import signal
import sys

import bs4
import pygments
from pygments.formatters import Terminal256Formatter
from pygments.lexers import HtmlLexer


def highlight(html):
    """Return syntax-highlighted HTML."""
    args = {'style': 'native'}
    lexer = HtmlLexer(**args)
    formatter = Terminal256Formatter(**args)
    return pygments.highlight(html, lexer, formatter)


def main():
    """Start program."""
    # ignore broken pipe
    signal.signal(signal.SIGPIPE, signal.SIG_DFL)

    print(prettyprint(sys.stdin.read()))


def prettify(html):
    """Return prettified HTML."""
    return bs4.BeautifulSoup(html, 'html.parser').prettify()


def prettyprint(html):
    """Return prettified syntax-highlighted HTML."""
    data = highlight(prettify(html))

    # encode to str if necessary (Python 2)
    return data if isinstance(data, str) else data.encode('utf8')


if __name__ == '__main__':
    main()
